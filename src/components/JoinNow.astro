---
// Componente JoinNow.astro
export interface Props {
  data: {
    title: string;
    subtitle: string;
    columns: number;
    items: Array<{
      icon: string;
      title: string;
      description: string;
    }>;
    cta: {
      label: string;
      url: string;
    };
  };
  background?: string;
}

const { data, background = 'light' } = Astro.props;

// Validaci√≥n de datos
if (!data) {
  console.error('JoinNow component - No data received');
  return null;
}

const bgClass = background === 'dark' ? 'bg-gray-900' : 'bg-[#f6f2e7]';
---

<section class={`${bgClass} flex flex-col justify-center py-20 px-4`}>
  <div class="max-w-5xl w-full mx-auto flex flex-col items-center">
    <h2 class="font-heading text-[32px] sm:text-[32px] font-bold text-center mb-4">{data.title}</h2>
    <p class="font-body text-base text-center text-gray-600 mb-12 max-w-2xl">
      {data.subtitle}
    </p>
    <div class={`grid grid-cols-2 sm:grid-cols-${data.columns} gap-y-12 gap-x-8 w-full mb-10`}>
      {data.items.map((item: any, index: number) => (
        <div class="flex flex-col items-center text-center px-4">
          <div class="w-12 h-12 border-2 border-[#d6cdb7] rounded-lg flex items-center justify-center mb-4">
            <span class="material-symbols-outlined text-primary text-xs">{item.icon}</span>
          </div>
          <h5 class="font-heading text-h5 sm:text-h5-desktop font-semibold mb-1">{item.title}</h5>
          <p class="font-body text-sm text-gray-600">{item.description}</p>
        </div>
      ))}
    </div>
    {data.cta && (
      <a href={data.cta.url} class="mt-4 px-8 py-3 bg-black text-white font-body font-medium rounded hover:bg-gray-900 transition">
        {data.cta.label}
      </a>
    )}
  </div>
</section> 